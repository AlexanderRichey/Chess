exit
self.pos
self
pos
c
board.checkmate?
best_move
c
@tree.each { |move| puts move[:score] }
@tree
c
@tree
exit
@tree
c
@tree.count
@tree
c
@tree
exit
@tree
best_move
n
c
@tree
exit
@tree.each { |move| puts move[:score] }
@tree
c
@tree
c
@tree
c
exit
@tree.last
@tree.first[:score]
@tree.first[score]
@tree.first
@tree.count
c
exit
c
exit
best_move[0]
board[best_move[0]].pos
board[best_move[0]]
c
end_pos
start_pos
n
s
n
s
self[start]
start
self[start].valid_moves
s
start
s
board[[0,1]]
best_move
exit
board[best_node.end_pos]
board[best_node.start_pos]
board[start_pos]
exit
self
possible_pos
s
possible_pos
s
possible_pos
s
pos
exit
@board[end_pos]exit
@board[start_pos]
@board[end_pos]
board[end_pos]
end_pos
start_pos
c
self[start].valid_moves
self[start]
c
self[start].valid_moves
self[start]
end_pos
start
exit
c
pos
c
pos
display
display: pos
pos
c
pos
c
pos
c
possible_pos
pos
c
pos
c
pos
c
pos
n
@board[possible_pos].color
@board[pos].opponent_color
@board[pos]
board[pos]
all_moves
possible_pos
pos
n
self
n
all_moves
n
pos
s
n
s
n
s
end_pos
self[start]
start
s
n
best_node.end_pos
best_node.start_pos
n
c
best_node.start_pos
best_node.board[[0, 1]]
best_node.board[[0, 3]]
best_node.board[[0, 2]]
best_node.board[[0, 1]]
best_node.board[[0, 0]]
best_node.board[[0, 2]]
best_node.board[[2, 0]]
best_node.board[[2, 2]]
best_node.color
best_node.end_pos
best_node.start_pos
best_node.score
best_node.board.board.inspect
best_node.board.board.board
best_node.board.board
best_node.board
best_node
@tree
board[best_node.start_pos]
best_node.start_pos
n
c
self[start]
end_pos
self[start]
end_pos
start
n
just_checking
n
in_check?(color)
n
start_piece
end_pos
start
n
in_check?(color)
s
start_piece.color
s
self[end_pos]
s
pos
s
end_pos
start
s
n
s
@board[possible_pos]
s
pos
s
all_moves
possible_pos
pos
s
pos
s
@pos
s
pos
s
pos
s
end_pos
start
s
n
pos
@selected
c
best_node.end_pos
best_node.start_pos
n
c
exit
piece.pos
move
moves
duped_piece
c
exit
moves
piece.pos
move
duped_board[[2, 2]]
duped_board[[0, 2]]
duped_board[[2, 2]]
piece
duped_board
duped_board[[2, 2]]
piece.pos
duped_piece
c
exit
end_pos
start_pos
piece
c
n
@tree.count
@tree
s
@start_pos
s
@score
s
n
s
end_pos
piece.pos
s
value
s
value
pos
